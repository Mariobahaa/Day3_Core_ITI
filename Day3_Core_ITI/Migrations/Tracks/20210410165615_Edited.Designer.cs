// <auto-generated />
using System;
using Day3_Core_ITI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Day3_Core_ITI.Migrations.Tracks
{
    [DbContext(typeof(TracksContext))]
    [Migration("20210410165615_Edited")]
    partial class Edited
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Day3_Core_ITI.Models.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Grade")
                        .HasColumnType("real");

                    b.Property<string>("Topic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Day3_Core_ITI.Models.CourseTrack", b =>
                {
                    b.Property<int>("TackId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("TrackId")
                        .HasColumnType("int");

                    b.HasKey("TackId", "CourseId");

                    b.HasIndex("CourseId");

                    b.HasIndex("TrackId");

                    b.ToTable("CourseTracks");
                });

            modelBuilder.Entity("Day3_Core_ITI.Models.Track", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("Day3_Core_ITI.Models.Trainee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("TrackId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TrackId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Day3_Core_ITI.Models.CourseTrack", b =>
                {
                    b.HasOne("Day3_Core_ITI.Models.Course", "Course")
                        .WithMany("CourseTrack")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Day3_Core_ITI.Models.Track", "Track")
                        .WithMany("CourseTracks")
                        .HasForeignKey("TrackId");

                    b.Navigation("Course");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("Day3_Core_ITI.Models.Trainee", b =>
                {
                    b.HasOne("Day3_Core_ITI.Models.Track", "Track")
                        .WithMany("Trainees")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Track");
                });

            modelBuilder.Entity("Day3_Core_ITI.Models.Course", b =>
                {
                    b.Navigation("CourseTrack");
                });

            modelBuilder.Entity("Day3_Core_ITI.Models.Track", b =>
                {
                    b.Navigation("CourseTracks");

                    b.Navigation("Trainees");
                });
#pragma warning restore 612, 618
        }
    }
}
